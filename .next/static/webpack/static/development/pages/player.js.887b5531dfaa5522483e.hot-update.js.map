{"version":3,"file":"static/webpack/static\\development\\pages\\player.js.887b5531dfaa5522483e.hot-update.js","sources":["webpack:///./pages/player.js"],"sourcesContent":["import { Grid, Segment } from \"semantic-ui-react\";\r\nimport { withRouter } from \"next/router\";\r\n\r\nimport Layer from \"../layout/Layout\";\r\nimport VideoPlayer from \"../components/VideoPlayer/VideoPlayer\";\r\nimport { fetchVideos, fetchPlaylistItems } from \"../api/fetch\";\r\nimport Playlists from \"../components/Playlists/Playlists\";\r\n\r\nclass Player extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.id = this.props.router.query.id;\r\n    this.state = { currentVideo: {}, playlistsItems: [] };\r\n  }\r\n  static async getInitialProps(ctx) {\r\n    if (ctx.query.type === \"playlist\") {\r\n      let data = await fetchPlaylistItems(ctx.query.id);\r\n      return {\r\n        currentVideo: data.items[0],\r\n        videoId: data.items[0].snippet.resourceId.videoId,\r\n        playlistsItems: data.items,\r\n        type: \"playlist\"\r\n      };\r\n    } else {\r\n      let data = await fetchVideos(ctx.query.id);\r\n      let otherVideos = await fetchVideos();\r\n      return {\r\n        currentVideo: data.items[0],\r\n        videoId: data.items[0].id,\r\n        playlistsItems: otherVideos.items,\r\n        type: \"video\"\r\n      };\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <Layer>\r\n        <Grid inverted padded columns={2}>\r\n          <Grid.Row columns=\"equal\">\r\n            <Grid.Column floated=\"left\" width={11}>\r\n              <VideoPlayer\r\n                videoId={this.props.videoId}\r\n                data={this.props.currentVideo}\r\n              />\r\n            </Grid.Column>\r\n\r\n            <Grid.Column width={5}>\r\n              <div\r\n                style={{\r\n                  overflowY: \"scroll\",\r\n                  height: \"70px\",\r\n                  maxHeight: \"100px\"\r\n                }}\r\n              >\r\n                <Segment inverted color=\"black\">\r\n                  <Playlists\r\n                    type={this.props.type}\r\n                    playlistsItems={this.props.playlistsItems}\r\n                  />\r\n                </Segment>\r\n              </div>\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n        </Grid>\r\n      </Layer>\r\n    );\r\n  }\r\n}\r\nexport default withRouter(Player);\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAHA;AAIA;AACA;;;AAoBA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AAFA;AAMA;AAAA;AAEA;AACA;AACA;AACA;AAHA;AADA;AAOA;AAAA;AAAA;AAEA;AACA;AAFA;AAWA;;;;;;AApDA;;;;;;;AACA;;;;;;AACA;AACA;;AADA;AACA;AACA;AACA;AACA;AACA;AAJA;AACA;;;AAMA;AACA;;AADA;;AACA;AACA;;AADA;AACA;AACA;AACA;AACA;AACA;AAJA;AACA;;;;;;;;;;;;;;;;;;AAnBA;AACA;AA2DA;;;;A","sourceRoot":""}